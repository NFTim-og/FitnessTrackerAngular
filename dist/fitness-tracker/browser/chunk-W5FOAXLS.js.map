{
  "version": 3,
  "sources": ["src/app/pages/auth/login/login.component.ts", "src/app/pages/auth/login/login.component.html"],
  "sourcesContent": ["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n  isLoading = false;\n  error = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  showError(field: string) {\n    const control = this.loginForm.get(field);\n    return control?.invalid && (control?.dirty || control?.touched);\n  }\n\n  onSubmit() {\n    if (this.loginForm.invalid) return;\n\n    this.isLoading = true;\n    this.error = '';\n\n    console.log('Login Component - Submitting login form');\n\n    this.authService.login(\n      this.loginForm.value.email,\n      this.loginForm.value.password\n    ).subscribe({\n      next: (result) => {\n        console.log('Login Component - Login successful, token received:', !!result.token);\n        console.log('Login Component - User:', result.user);\n        this.router.navigate(['/']);\n      },\n      error: (error: any) => {\n        console.error('Login Component - Login error:', error);\n        this.error = error.message || 'An error occurred during login';\n        this.isLoading = false;\n      },\n      complete: () => {\n        console.log('Login Component - Login complete');\n        this.isLoading = false;\n      }\n    });\n  }\n}", "<div class=\"min-h-[80vh] flex items-center justify-center\">\n    <div class=\"max-w-md w-full\">\n      <h1 class=\"text-3xl font-bold text-center mb-8\">Sign In</h1>\n      \n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"card\">\n        <div class=\"form-group\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            formControlName=\"email\"\n            class=\"form-control\"\n            [class.border-red-500]=\"showError('email')\"\n          />\n          @if (showError('email')) {\n            <p class=\"text-red-500 text-sm mt-1\">Please enter a valid email</p>\n          }\n        </div>\n  \n        <div class=\"form-group\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            formControlName=\"password\"\n            class=\"form-control\"\n            [class.border-red-500]=\"showError('password')\"\n          />\n          @if (showError('password')) {\n            <p class=\"text-red-500 text-sm mt-1\">Password is required</p>\n          }\n        </div>\n  \n        @if (error) {\n          <div class=\"text-red-500 text-sm mb-4\">{{ error }}</div>\n        }\n  \n        <button\n          type=\"submit\"\n          class=\"btn btn-primary w-full\"\n          [disabled]=\"loginForm.invalid || isLoading\"\n        >\n          {{ isLoading ? 'Signing in...' : 'Sign In' }}\n        </button>\n      </form>\n    </div>\n  </div>"],
  "mappings": "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",
  "names": []
}
