{
  "version": 3,
  "sources": ["src/app/shared/components/pagination/pagination.component.ts"],
  "sourcesContent": ["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-pagination',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    @if (totalPages > 1) {\n      <div class=\"flex justify-center gap-2 mb-6\">\n        <button\n          class=\"btn btn-secondary\"\n          [disabled]=\"currentPage === 1\"\n          (click)=\"onPageChange(currentPage - 1)\"\n        >\n          Previous\n        </button>\n        \n        @for (page of pages; track page) {\n          <button\n            class=\"btn\"\n            [class.btn-primary]=\"currentPage === page\"\n            [class.btn-secondary]=\"currentPage !== page\"\n            (click)=\"onPageChange(page)\"\n          >\n            {{ page }}\n          </button>\n        }\n\n        <button\n          class=\"btn btn-secondary\"\n          [disabled]=\"currentPage === totalPages\"\n          (click)=\"onPageChange(currentPage + 1)\"\n        >\n          Next\n        </button>\n      </div>\n    }\n  `\n})\nexport class PaginationComponent {\n  @Input() currentPage = 1;\n  @Input() totalCount = 0;\n  @Input() perPage = 10;\n  @Output() pageChange = new EventEmitter<number>();\n\n  get totalPages(): number {\n    return Math.ceil(this.totalCount / this.perPage);\n  }\n\n  get pages(): number[] {\n    return Array.from({ length: this.totalPages }, (_, i) => i + 1);\n  }\n\n  onPageChange(page: number): void {\n    this.pageChange.emit(page);\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBU,IAAA,yBAAA,GAAA,UAAA,CAAA;AAIE,IAAA,qBAAA,SAAA,SAAA,2EAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,OAAA,CAAkB;IAAA,CAAA;AAE3B,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;AALE,IAAA,sBAAA,eAAA,OAAA,gBAAA,OAAA,EAA0C,iBAAA,OAAA,gBAAA,OAAA;AAI1C,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,SAAA,GAAA;;;;;;AAhBN,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA4C,GAAA,UAAA,CAAA;AAIxC,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,OAAA,cAA2B,CAAC,CAAC;IAAA,CAAA;AAEtC,IAAA,iBAAA,GAAA,YAAA;AACF,IAAA,uBAAA;AAEA,IAAA,2BAAA,GAAA,kDAAA,GAAA,GAAA,UAAA,GAAA,mCAAA;AAWA,IAAA,yBAAA,GAAA,UAAA,CAAA;AAGE,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,OAAA,cAA2B,CAAC,CAAC;IAAA,CAAA;AAEtC,IAAA,iBAAA,GAAA,QAAA;AACF,IAAA,uBAAA,EAAS;;;;AAvBP,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,gBAAA,CAAA;AAMF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,OAAA,KAAA;AAaE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,gBAAA,OAAA,UAAA;;;AASJ,IAAO,sBAAP,MAAO,qBAAmB;EArChC,cAAA;AAsCW,SAAA,cAAc;AACd,SAAA,aAAa;AACb,SAAA,UAAU;AACT,SAAA,aAAa,IAAI,aAAY;;EAEvC,IAAI,aAAU;AACZ,WAAO,KAAK,KAAK,KAAK,aAAa,KAAK,OAAO;EACjD;EAEA,IAAI,QAAK;AACP,WAAO,MAAM,KAAK,EAAE,QAAQ,KAAK,WAAU,GAAI,CAAC,GAAG,MAAM,IAAI,CAAC;EAChE;EAEA,aAAa,MAAY;AACvB,SAAK,WAAW,KAAK,IAAI;EAC3B;;;uCAhBW,sBAAmB;IAAA;EAAA;;yEAAnB,sBAAmB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,QAAA,EAAA,aAAA,eAAA,YAAA,cAAA,SAAA,UAAA,GAAA,SAAA,EAAA,YAAA,aAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,QAAA,kBAAA,SAAA,MAAA,GAAA,CAAA,GAAA,OAAA,iBAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,OAAA,GAAA,eAAA,eAAA,GAAA,CAAA,GAAA,OAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,UAAA,KAAA,GAAA;AAhC5B,QAAA,qBAAA,GAAA,4CAAA,GAAA,GAAA,OAAA,CAAA;;;AAAA,QAAA,wBAAA,IAAA,aAAA,IAAA,IAAA,EAAA;;sBAFQ,YAAY,GAAA,eAAA,EAAA,CAAA;EAAA;;;6EAkCX,qBAAmB,EAAA,WAAA,sBAAA,CAAA;AAAA,GAAA;",
  "names": []
}
