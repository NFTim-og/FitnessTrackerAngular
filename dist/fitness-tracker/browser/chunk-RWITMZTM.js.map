{
  "version": 3,
  "sources": ["src/app/shared/components/loading-spinner/loading-spinner.component.ts"],
  "sourcesContent": ["import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nexport type SpinnerSize = 'small' | 'medium' | 'large';\nexport type SpinnerColor = 'primary' | 'secondary' | 'white' | 'gray';\n\n@Component({\n  selector: 'app-loading-spinner',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"flex items-center justify-center\" [ngClass]=\"containerClasses\">\n      <div\n        class=\"animate-spin rounded-full border-solid border-t-transparent\"\n        [ngClass]=\"spinnerClasses\"\n        role=\"status\"\n        [attr.aria-label]=\"message || 'Loading'\"\n      >\n        <span class=\"sr-only\">{{ message || 'Loading...' }}</span>\n      </div>\n      <span \n        *ngIf=\"showMessage && message\" \n        class=\"ml-3 text-sm font-medium\"\n        [ngClass]=\"messageClasses\"\n      >\n        {{ message }}\n      </span>\n    </div>\n  `,\n  styles: [`\n    .animate-spin {\n      animation: spin 1s linear infinite;\n    }\n    \n    @keyframes spin {\n      from {\n        transform: rotate(0deg);\n      }\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  `]\n})\nexport class LoadingSpinnerComponent {\n  @Input() size: SpinnerSize = 'medium';\n  @Input() color: SpinnerColor = 'primary';\n  @Input() message?: string;\n  @Input() showMessage: boolean = false;\n  @Input() overlay: boolean = false;\n  @Input() fullScreen: boolean = false;\n\n  get containerClasses(): string {\n    const classes = [];\n    \n    if (this.overlay) {\n      classes.push('absolute inset-0 bg-white bg-opacity-75 z-10');\n    }\n    \n    if (this.fullScreen) {\n      classes.push('fixed inset-0 bg-white bg-opacity-90 z-50');\n    }\n    \n    return classes.join(' ');\n  }\n\n  get spinnerClasses(): string {\n    const classes = [];\n    \n    // Size classes\n    switch (this.size) {\n      case 'small':\n        classes.push('h-4 w-4 border-2');\n        break;\n      case 'medium':\n        classes.push('h-8 w-8 border-3');\n        break;\n      case 'large':\n        classes.push('h-12 w-12 border-4');\n        break;\n    }\n    \n    // Color classes\n    switch (this.color) {\n      case 'primary':\n        classes.push('border-blue-600');\n        break;\n      case 'secondary':\n        classes.push('border-gray-600');\n        break;\n      case 'white':\n        classes.push('border-white');\n        break;\n      case 'gray':\n        classes.push('border-gray-400');\n        break;\n    }\n    \n    return classes.join(' ');\n  }\n\n  get messageClasses(): string {\n    const classes = [];\n    \n    switch (this.color) {\n      case 'primary':\n        classes.push('text-blue-600');\n        break;\n      case 'secondary':\n        classes.push('text-gray-600');\n        break;\n      case 'white':\n        classes.push('text-white');\n        break;\n      case 'gray':\n        classes.push('text-gray-500');\n        break;\n    }\n    \n    return classes.join(' ');\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
