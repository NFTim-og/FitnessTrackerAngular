{
  "version": 3,
  "sources": ["src/app/pages/workout-plans/workout-plan-form/workout-plan-form.component.ts", "src/app/pages/workout-plans/workout-plan-form/workout-plan-form.component.html"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { WorkoutPlanService } from '../../../services/workout-plan.service';\nimport { ExerciseService } from '../../../services/exercise.service';\nimport { Exercise, WorkoutPlan, WorkoutExercise } from '../../../models/types';\nimport { PaginationState } from '../../../shared/interfaces/pagination.interface';\nimport { Subscription } from 'rxjs';\nimport { AppError } from '../../../shared/models/error.model';\n\n@Component({\n  selector: 'app-workout-plan-form',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './workout-plan-form.component.html'\n})\nexport class WorkoutPlanFormComponent implements OnInit, OnDestroy {\n  workoutForm: FormGroup;\n  isEditing = false;\n  isSubmitting = false;\n  exercises: Exercise[] = [];\n  selectedExercises: Exercise[] = [];\n  error: string | null = null;\n  private subscriptions: Subscription[] = [];\n\n  pagination: PaginationState = {\n    currentPage: 1,\n    totalCount: 0,\n    perPage: 6\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private workoutPlanService: WorkoutPlanService,\n    private exerciseService: ExerciseService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    this.workoutForm = this.fb.group({\n      name: ['', [Validators.required]],\n      description: ['', [Validators.required]]\n    });\n\n    // Subscribe to total count changes\n    this.subscriptions.push(\n      this.exerciseService.totalCount$.subscribe(count => {\n        this.pagination = { ...this.pagination, totalCount: count };\n      })\n    );\n  }\n\n  ngOnInit() {\n    // Subscribe to exercise data changes\n    this.subscriptions.push(\n      this.exerciseService.data$.subscribe(\n        exercises => this.exercises = exercises\n      )\n    );\n\n    this.loadExercises();\n\n    const workoutPlanId = this.route.snapshot.params['id'];\n    if (workoutPlanId) {\n      this.isEditing = true;\n      this.loadWorkoutPlan(workoutPlanId);\n    }\n  }\n\n  ngOnDestroy() {\n    // Clean up subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  loadExercises() {\n    try {\n      this.exerciseService.loadExercises({\n        page: this.pagination.currentPage,\n        perPage: this.pagination.perPage\n      }).subscribe(() => {\n        this.error = null;\n      }, error => {\n        this.error = error instanceof AppError ? error.message : 'Failed to load exercises';\n      });\n    } catch (error) {\n      this.error = error instanceof AppError ? error.message : 'Failed to load exercises';\n    }\n  }\n\n  changePage(page: number) {\n    this.pagination.currentPage = page;\n    this.loadExercises();\n  }\n\n  loadWorkoutPlan(id: string) {\n    try {\n      this.workoutPlanService.getWorkoutPlan(id).subscribe(workoutPlan => {\n        if (workoutPlan) {\n          this.workoutForm.patchValue({\n            name: workoutPlan.name,\n            description: workoutPlan.description\n          });\n\n          if (workoutPlan.exercises) {\n            this.selectedExercises = workoutPlan.exercises\n              .filter((we: WorkoutExercise) => we.exercise)\n              .map((we: WorkoutExercise) => we.exercise!)\n              .sort((a: Exercise, b: Exercise) => a.name.localeCompare(b.name));\n          }\n        }\n      }, error => {\n        console.error('Error loading workout plan:', error);\n      });\n    } catch (error) {\n      console.error('Error loading workout plan:', error);\n    }\n  }\n\n  availableExercises() {\n    return this.exercises.filter(\n      exercise => !this.selectedExercises.find(e => e.id === exercise.id)\n    );\n  }\n\n  addExercise(event: Event) {\n    const select = event.target as HTMLSelectElement;\n    const exerciseId = select.value;\n    const exercise = this.exercises.find(e => e.id === exerciseId);\n\n    if (exercise) {\n      this.selectedExercises = [...this.selectedExercises, exercise];\n      select.value = '';\n    }\n  }\n\n  removeExercise(exercise: Exercise) {\n    this.selectedExercises = this.selectedExercises.filter(\n      e => e.id !== exercise.id\n    );\n  }\n\n  showError(field: string) {\n    const control = this.workoutForm.get(field);\n    return control?.invalid && (control?.dirty || control?.touched);\n  }\n\n  onSubmit() {\n    if (this.workoutForm.invalid) return;\n\n    this.isSubmitting = true;\n    try {\n      const exercises = this.selectedExercises.map((exercise, index) => ({\n        exercise_id: exercise.id,\n        order: index + 1\n      }));\n\n      if (this.isEditing) {\n        const workoutPlanId = this.route.snapshot.params['id'];\n        this.workoutPlanService.updateWorkoutPlan(\n          workoutPlanId,\n          this.workoutForm.value,\n          exercises\n        ).subscribe(() => {\n          this.router.navigate(['/workout-plans']);\n        }, error => {\n          console.error('Error updating workout plan:', error);\n          this.isSubmitting = false;\n        });\n      } else {\n        this.workoutPlanService.createWorkoutPlan(\n          this.workoutForm.value,\n          exercises\n        ).subscribe(() => {\n          this.router.navigate(['/workout-plans']);\n        }, error => {\n          console.error('Error creating workout plan:', error);\n          this.isSubmitting = false;\n        });\n      }\n    } catch (error) {\n      console.error('Error saving workout plan:', error);\n      this.isSubmitting = false;\n    }\n  }\n\n  goBack() {\n    this.router.navigate(['/workout-plans']);\n  }\n}", "<div class=\"max-w-lg mx-auto\">\n    <h1 class=\"text-3xl font-bold mb-6\">\n      {{ isEditing ? 'Edit' : 'New' }} Workout Plan\n    </h1>\n  \n    <form [formGroup]=\"workoutForm\" (ngSubmit)=\"onSubmit()\" class=\"card\">\n      <div class=\"form-group\">\n        <label for=\"name\" class=\"form-label\">Plan Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          formControlName=\"name\"\n          class=\"form-control\"\n          [class.border-red-500]=\"showError('name')\"\n        />\n        @if (showError('name')) {\n          <p class=\"text-red-500 text-sm mt-1\">Plan name is required</p>\n        }\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"description\" class=\"form-label\">Description</label>\n        <textarea\n          id=\"description\"\n          formControlName=\"description\"\n          class=\"form-control\"\n          rows=\"3\"\n          [class.border-red-500]=\"showError('description')\"\n        ></textarea>\n        @if (showError('description')) {\n          <p class=\"text-red-500 text-sm mt-1\">Description is required</p>\n        }\n      </div>\n  \n      <div class=\"form-group\">\n        <label class=\"form-label\">Exercises</label>\n        <div class=\"space-y-2\">\n          @for (exercise of selectedExercises; track exercise.id) {\n            <div class=\"flex items-center gap-2 p-2 bg-gray-50 rounded\">\n              <span>{{ exercise.name }}</span>\n              <button\n                type=\"button\"\n                class=\"ml-auto text-red-500\"\n                (click)=\"removeExercise(exercise)\"\n              >\n                Remove\n              </button>\n            </div>\n          }\n        </div>\n  \n        <div class=\"mt-2\">\n          <select\n            (change)=\"addExercise($event)\"\n            class=\"form-control\"\n            [value]=\"''\"\n          >\n            <option value=\"\" disabled>Add an exercise</option>\n            @for (exercise of availableExercises(); track exercise.id) {\n              <option [value]=\"exercise.id\">{{ exercise.name }}</option>\n            }\n          </select>\n        </div>\n      </div>\n  \n      <div class=\"flex gap-4 mt-6\">\n        <button\n          type=\"submit\"\n          class=\"btn btn-primary\"\n          [disabled]=\"workoutForm.invalid || isSubmitting\"\n        >\n          {{ isSubmitting ? 'Saving...' : (isEditing ? 'Update' : 'Create') }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-secondary\"\n          (click)=\"goBack()\"\n        >\n          Cancel\n        </button>\n      </div>\n    </form>\n  </div>"],
  "mappings": "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",
  "names": []
}
