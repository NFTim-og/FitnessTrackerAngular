{
  "version": 3,
  "sources": ["src/app/shared/models/pagination.model.ts", "src/app/pages/workout-plans/workout-plan-list/workout-plan-list.component.ts", "src/app/pages/workout-plans/workout-plan-list/workout-plan-list.component.html"],
  "sourcesContent": ["export class PaginationState {\n    currentPage: number;\n    totalCount: number;\n    perPage: number;\n\n    constructor(data: Partial<PaginationState> = {}) {\n      this.currentPage = data.currentPage || 1;\n      this.totalCount = data.totalCount || 0;\n      this.perPage = data.perPage || 10;\n    }\n\n    get totalPages(): number {\n      return Math.ceil(this.totalCount / this.perPage);\n    }\n\n    get startIndex(): number {\n      return (this.currentPage - 1) * this.perPage;\n    }\n\n    get endIndex(): number {\n      return this.startIndex + this.perPage - 1;\n    }\n  }\n\n  export class PaginationParams {\n    page: number;\n    perPage: number;\n    sortBy?: string;\n    sortOrder?: 'ASC' | 'DESC';\n\n    constructor(data: Partial<PaginationParams> = {}) {\n      this.page = data.page || 1;\n      this.perPage = data.perPage || 10;\n      this.sortBy = data.sortBy;\n      this.sortOrder = data.sortOrder;\n    }\n  }\n\n  export class PaginationResponse<T> {\n    data: T[];\n    totalCount: number;\n\n    constructor(data: T[], totalCount: number) {\n      this.data = data;\n      this.totalCount = totalCount;\n    }\n  }", "import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, NgForm } from '@angular/forms';\nimport { AppError } from '../../../shared/models/error.model';\nimport { PaginationComponent } from '../../../shared/components/pagination/pagination.component';\nimport { WorkoutPlan } from '../../../models/workout-plan.model';\nimport { Exercise } from '../../../models/exercise.model';\nimport { PaginationState } from '../../../shared/models/pagination.model';\nimport { WorkoutPlanService } from '../../../services/workout-plan.service';\n\n@Component({\n  selector: 'app-workout-plan-list',\n  standalone: true,\n  imports: [CommonModule, RouterModule, FormsModule, PaginationComponent],\n  templateUrl: './workout-plan-list.component.html'\n})\nexport class WorkoutPlanListComponent implements OnInit {\n  workoutPlans: WorkoutPlan[] = [];\n  searchQuery = '';\n  error: string | null = null;\n  pagination: PaginationState = new PaginationState({\n    currentPage: 1,\n    totalCount: 0,\n    perPage: 6  // Increased from 1 to 6 to show more workout plans per page\n  });\n\n  constructor(private workoutPlanService: WorkoutPlanService) {\n    this.workoutPlanService.totalCount$.subscribe(count => {\n      this.pagination = new PaginationState({\n        currentPage: this.pagination.currentPage,\n        totalCount: count,\n        perPage: this.pagination.perPage\n      });\n    });\n  }\n\n  ngOnInit() {\n    console.log('WorkoutPlanListComponent - Initializing');\n    this.workoutPlanService.workoutPlans$.subscribe(\n      plans => {\n        console.log('WorkoutPlanListComponent - Received workout plans:', plans);\n        this.workoutPlans = plans;\n      }\n    );\n    this.loadWorkoutPlans();\n  }\n\n  async loadWorkoutPlans() {\n    console.log('WorkoutPlanListComponent - Loading workout plans');\n    try {\n      await this.workoutPlanService.loadWorkoutPlans({\n        page: this.pagination.currentPage,\n        perPage: this.pagination.perPage\n      });\n      console.log('WorkoutPlanListComponent - Workout plans loaded successfully');\n      console.log('WorkoutPlanListComponent - Current workout plans:', this.workoutPlans);\n      console.log('WorkoutPlanListComponent - Pagination:', this.pagination);\n      this.error = null;\n    } catch (error) {\n      console.error('WorkoutPlanListComponent - Error loading workout plans:', error);\n      this.error = error instanceof AppError ? error.message : 'Failed to load workout plans';\n    }\n  }\n\n  getExercises(plan: WorkoutPlan): Exercise[] {\n    return plan.getExercises();\n  }\n\n  async onSearch() {\n    this.pagination = new PaginationState({\n      ...this.pagination,\n      currentPage: 1\n    });\n    try {\n      await this.workoutPlanService.searchWorkoutPlans(\n        this.searchQuery,\n        {\n          page: this.pagination.currentPage,\n          perPage: this.pagination.perPage\n        }\n      );\n    } catch (error) {\n      console.error('Error searching workout plans:', error);\n    }\n  }\n\n  async changePage(page: number) {\n    this.pagination = new PaginationState({\n      ...this.pagination,\n      currentPage: page\n    });\n    if (this.searchQuery) {\n      await this.workoutPlanService.searchWorkoutPlans(\n        this.searchQuery,\n        {\n          page: this.pagination.currentPage,\n          perPage: this.pagination.perPage\n        }\n      );\n    } else {\n      await this.loadWorkoutPlans();\n    }\n  }\n\n  async deleteWorkoutPlan(id: string) {\n    if (!confirm('Are you sure you want to delete this workout plan?')) return;\n\n    try {\n      await this.workoutPlanService.deleteWorkoutPlan(id);\n      this.error = null;\n    } catch (error) {\n      this.error = error instanceof AppError ? error.message : 'Failed to delete workout plan';\n    }\n  }\n}", "<div class=\"container mx-auto px-4 py-8\">\n    <div class=\"mb-6\">\n      <h1 class=\"text-3xl font-bold mb-4\">My Workout Plans</h1>\n      <div class=\"flex gap-4 mb-4\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"searchQuery\"\n          (input)=\"onSearch()\"\n          placeholder=\"Search workout plans...\"\n          class=\"form-control\"\n        />\n      </div>\n      <button\n        [routerLink]=\"['/workout-plans/new']\"\n        class=\"btn btn-primary\"\n      >\n        Create New Plan\n      </button>\n    </div>\n  \n    <app-pagination\n      [currentPage]=\"pagination.currentPage\"\n      [totalCount]=\"pagination.totalCount\"\n      [perPage]=\"pagination.perPage\"\n      (pageChange)=\"changePage($event)\"\n    ></app-pagination>\n  \n    @if (error) {\n      <div class=\"alert alert-error mb-4\">\n        {{ error }}\n        <button class=\"ml-2\" (click)=\"error = null\">&times;</button>\n      </div>\n    }\n  \n    <div class=\"grid grid-cols-1 gap-4\">\n      @for (plan of workoutPlans; track plan.id) {\n        <div class=\"card\">\n          <div class=\"p-4\">\n            <h3 class=\"text-xl font-semibold mb-2\">{{ plan.name }}</h3>\n            <div class=\"prose max-w-none mb-4\">\n              <pre class=\"text-gray-600 whitespace-pre-wrap font-sans text-base break-words\">{{ plan.description }}</pre>\n            </div>\n            \n            @if (plan.exercises && plan.exercises.length > 0) {\n              <div class=\"mb-4\">\n                <h4 class=\"font-medium mb-2\">Exercises:</h4>\n                <ul class=\"list-disc list-inside\">\n                  @for (exercise of getExercises(plan); track exercise.id) {\n                    <li>{{ exercise.name }}</li>\n                  }\n                </ul>\n              </div>\n            }\n  \n            <div class=\"flex gap-2\">\n              <button\n                [routerLink]=\"['/workout-plans', plan.id, 'edit']\"\n                class=\"btn btn-primary\"\n              >\n                Edit\n              </button>\n              <button\n                (click)=\"deleteWorkoutPlan(plan.id)\"\n                class=\"btn btn-danger\"\n              >\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      }\n    </div>\n  </div>"],
  "mappings": "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",
  "names": []
}
